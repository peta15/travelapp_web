/*! angularparse - v0.1.0 - 2014-04-15
* https://github.com/felipesabino/angular-parse
* Copyright (c) 2014 Felipe Sabino
* Licensed MIT */
(function(){"use strict";angular.module("angularParse.persistence",[]).service("parsePersistence",["$q","$timeout",function(r,n){var e;return e={"new":function(r){var n;return n=Parse.Object.extend(r),new n},persist:function(e,t,u){var a;return null==t&&(t={}),null==u&&(u="save"),a=r.defer(),e[u].call(e,t).then(function(r){return n(function(){return a.resolve(r)},0)},function(r){return n(function(){return a.reject(r)},0)}),a.promise}},angular.forEach(["save","destroy"],function(r){return e[r]=function(n,t){return e.persist(n,t,r)}}),e}])}).call(this),function(){"use strict";angular.module("angularParse.query",[]).service("parseQuery",["$q","$timeout",function(r,n){var e;return e={"new":function(r){var n;return n=Parse.Object.extend(r),new Parse.Query(n)},query:function(e,t,u){var a;return null==t&&(t={}),null==u&&(u="find"),a=r.defer(),e[u].call(e,t).then(function(r){return n(function(){return a.resolve(r)},0)},function(r){return n(function(){return a.reject(r)},0)}),a.promise}},angular.forEach(["find","count","get"],function(r){return e[r]=function(n,t){return e.query(n,t,r)}}),e}])}.call(this),function(){"use strict";angular.module("angularParse",["angularParse.persistence","angularParse.query"])}.call(this);